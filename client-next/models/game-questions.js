const {
    GoogleGenerativeAI,
    HarmCategory,
    HarmBlockThreshold,
} = require("@google/generative-ai");

const apiKey = process.env.NEXT_PUBLIC_GEMINI_API_KEY;
const genAI = new GoogleGenerativeAI(apiKey);

const model = genAI.getGenerativeModel({
    model: "gemini-2.0-flash-exp",
});

const generationConfig = {
    temperature: 1,
    topP: 0.95,
    topK: 40,
    maxOutputTokens: 8192,
    responseMimeType: "application/json",
};

export const gameQuestions = model.startChat({
    generationConfig,
    history: [
        {
            role: "user",
            parts: [
                { text: "Generate a set of 4 coding interview questions covering HASHMAPS with a difficulty level of EASY. Provide examples of expected output. The question should be thorough and detailed and resemble the style of leetcode questions. The question titles should describe the problem that is being generated. Output the response in JSON format. The text will be placed in an HTML div, so do not format output at all. No asterisks or code blocks. Follow the given structure:\n{\ntitle: String,\ndifficulty: String,\ntopic: String,\nquestions: [\n{\ntitle: String,\nquestion: String,\nexample_1: String,\nexample_2: String,\n}\n]\n}" },
            ],
        },
        {
            role: "model",
            parts: [
                { text: "```json\n{\n\"title\": \"HashMap Interview Questions\",\n\"difficulty\": \"Easy\",\n\"topic\": \"HashMaps\",\n\"questions\": [\n    {\n      \"title\": \"Two Sum\",\n      \"question\": \"Given an array of integers `nums` and an integer `target`, return indices of the two numbers such that they add up to `target`. You may assume that each input would have exactly one solution, and you may not use the same element twice. You can return the answer in any order.\\n\\nConstraints:\\n2 <= nums.length <= 10^4\\n-10^9 <= nums[i] <= 10^9\\n-10^9 <= target <= 10^9\\nOnly one valid answer exists.\",\n      \"example_1\": \"Input: nums = [2,7,11,15], target = 9\\nOutput: [0,1]\\nExplanation: Because nums[0] + nums[1] == 9, we return [0, 1].\",\n      \"example_2\": \"Input: nums = [3,2,4], target = 6\\nOutput: [1,2]\\nExplanation: Because nums[1] + nums[2] == 6, we return [1, 2].\"\n    },\n    {\n      \"title\": \"Jewels and Stones\",\n      \"question\": \"You're given strings `jewels` representing the types of stones that are jewels, and `stones` representing the stones you have. Each character in `stones` is a type of stone you have. You want to know how many of the stones you have are also jewels.\\nLetters are case sensitive, so \\\"a\\\" is considered a different type of stone from \\\"A\\\".\\n\\nConstraints:\\n1 <= jewels.length, stones.length <= 50\\n`jewels` and `stones` consist of only English letters. All the characters of `jewels` are unique.\",\n      \"example_1\": \"Input: jewels = \\\"aA\\\", stones = \\\"aAAbbbb\\\"\\nOutput: 3\\nExplanation: The characters 'a' and 'A' are jewels. In the stones string, there are three instances of jewels.\",\n       \"example_2\": \"Input: jewels = \\\"z\\\", stones = \\\"ZZ\\\"\\nOutput: 0\\nExplanation: The jewel 'z' does not exist in the stones.\"\n    },\n    {\n        \"title\": \"First Unique Character in a String\",\n        \"question\": \"Given a string `s`, find the first non-repeating character in it and return its index. If it does not exist, return -1.\\n\\nConstraints:\\n1 <= s.length <= 10^5\\n`s` consists of only lowercase English letters.\",\n        \"example_1\": \"Input: s = \\\"leetcode\\\"\\nOutput: 0\\nExplanation: The first non-repeating character is 'l', which is at index 0.\",\n         \"example_2\": \"Input: s = \\\"loveleetcode\\\"\\nOutput: 2\\nExplanation: The first non-repeating character is 'v', which is at index 2.\"\n    },\n    {\n        \"title\": \"Ransom Note\",\n        \"question\": \"Given two strings `ransomNote` and `magazine`, return `true` if `ransomNote` can be constructed by using the letters from `magazine` and `false` otherwise. Each letter in `magazine` can only be used once in `ransomNote`.\\n\\nConstraints:\\n1 <= ransomNote.length, magazine.length <= 10^5\\n`ransomNote` and `magazine` consist of lowercase English letters.\",\n        \"example_1\": \"Input: ransomNote = \\\"a\\\", magazine = \\\"b\\\"\\nOutput: false\\nExplanation: 'a' cannot be constructed from 'b'.\",\n        \"example_2\": \"Input: ransomNote = \\\"aa\\\", magazine = \\\"ab\\\"\\nOutput: false\\nExplanation: 'aa' cannot be constructed from 'ab' because there is only one 'a' available.\",\n        \"example_3\": \"Input: ransomNote = \\\"aa\\\", magazine = \\\"aab\\\"\\nOutput: true\\nExplanation: 'aa' can be constructed from 'aab'.\"\n    }\n  ]\n}\n```\n" },
            ],
        },
        {
            role: "user",
            parts: [
                { text: "Generate a set of 6 coding interview questions covering ARRAYS with a difficulty level of MEDIUM. Provide examples of expected output. The question should be thorough and detailed and resemble the style of leetcode questions. The question titles should describe the problem that is being generated. Output the response in JSON format. The text will be placed in an HTML div, so do not format output at all. No asterisks or code blocks. Follow the given structure:\n{\ntitle: String,\ndifficulty: String,\ntopic: String,\nquestions: [\n{\ntitle: String,\nquestion: String,\nexample_1: String,\nexample_2: String,\n}\n]\n}" },
            ],
        },
        {
            role: "model",
            parts: [
                { text: "```json\n{\n\"title\": \"Array Interview Questions\",\n\"difficulty\": \"Medium\",\n\"topic\": \"Arrays\",\n\"questions\": [\n    {\n      \"title\": \"3Sum\",\n      \"question\": \"Given an integer array `nums`, return all the triplets `[nums[i], nums[j], nums[k]]` such that `i != j`, `i != k`, and `j != k`, and `nums[i] + nums[j] + nums[k] == 0`. Notice that the solution set must not contain duplicate triplets. You can return the answer in any order.\\n\\nConstraints:\\n3 <= nums.length <= 3000\\n-10^5 <= nums[i] <= 10^5\",\n      \"example_1\": \"Input: nums = [-1,0,1,2,-1,-4]\\nOutput: [[-1,-1,2],[-1,0,1]]\\nExplanation: The triplets that sum to 0 are [-1, -1, 2] and [-1, 0, 1].\",\n      \"example_2\": \"Input: nums = [0,1,1]\\nOutput: []\\nExplanation: There are no triplets that sum to 0.\"\n    },\n    {\n      \"title\": \"Container With Most Water\",\n      \"question\": \"You are given an integer array `height` of length `n`. There are `n` vertical lines drawn such that the two endpoints of the i-th line are `(i, 0)` and `(i, height[i])`. Find two lines that, together with the x-axis, form a container, such that the container contains the most water. Return the maximum amount of water a container can store.\\nNotice that you may not slant the container.\\n\\nConstraints:\\nn == height.length\\n2 <= n <= 10^5\\n0 <= height[i] <= 10^4\",\n      \"example_1\": \"Input: height = [1,8,6,2,5,4,8,3,7]\\nOutput: 49\\nExplanation: The maximum area of water (blue section) the container can contain is 49.\",\n      \"example_2\": \"Input: height = [1,1]\\nOutput: 1\\nExplanation: The maximum area of water (blue section) the container can contain is 1.\"\n    },\n    {\n        \"title\": \"Product of Array Except Self\",\n        \"question\": \"Given an integer array `nums`, return an array `answer` such that `answer[i]` is equal to the product of all the elements of `nums` except `nums[i]`. The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer. You must write an algorithm that runs in O(n) time and without using the division operation.\\n\\nConstraints:\\n2 <= nums.length <= 10^5\\n-30 <= nums[i] <= 30\\nThe product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.\",\n        \"example_1\": \"Input: nums = [1,2,3,4]\\nOutput: [24,12,8,6]\\nExplanation: The product of all elements except for the element at each index. answer[0] = 2 * 3 * 4 = 24, answer[1] = 1 * 3 * 4 = 12, answer[2] = 1 * 2 * 4 = 8, answer[3] = 1 * 2 * 3 = 6\",\n         \"example_2\": \"Input: nums = [-1,1,0,-3,3]\\nOutput: [0,0,9,0,0]\\nExplanation: The product of all elements except for the element at each index.\"\n    },\n    {\n        \"title\": \"Longest Substring Without Repeating Characters\",\n        \"question\": \"Given a string `s`, find the length of the longest substring without repeating characters.\\n\\nConstraints:\\n0 <= s.length <= 5 * 10^4\\n`s` consists of English letters, digits, symbols and spaces.\",\n        \"example_1\": \"Input: s = \\\"abcabcbb\\\"\\nOutput: 3\\nExplanation: The answer is \\\"abc\\\", with the length of 3.\",\n        \"example_2\": \"Input: s = \\\"bbbbb\\\"\\nOutput: 1\\nExplanation: The answer is \\\"b\\\", with the length of 1.\"\n    },\n    {\n      \"title\": \"Group Anagrams\",\n      \"question\": \"Given an array of strings `strs`, group the anagrams together. You can return the answer in any order.\\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\\n\\nConstraints:\\n1 <= strs.length <= 10^4\\n0 <= strs[i].length <= 100\\nstrs[i] consists of lowercase English letters.\",\n      \"example_1\": \"Input: strs = [\\\"eat\\\",\\\"tea\\\",\\\"tan\\\",\\\"ate\\\",\\\"nat\\\",\\\"bat\\\"]\\nOutput: [[\\\"bat\\\"],[\\\"nat\\\",\\\"tan\\\"],[\\\"ate\\\",\\\"eat\\\",\\\"tea\\\"]]\\nExplanation: Anagrams are grouped together.\",\n      \"example_2\": \"Input: strs = [\\\"\\\"]\\nOutput: [[\\\"\\\"]]\\nExplanation: Empty string is grouped by itself.\"\n    },\n        {\n      \"title\": \"Spiral Matrix\",\n      \"question\": \"Given an `m x n` matrix, return all elements of the matrix in spiral order.\\n\\nConstraints:\\nm == matrix.length\\nn == matrix[i].length\\n1 <= m, n <= 10\\n-100 <= matrix[i][j] <= 100\",\n      \"example_1\": \"Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]\\nOutput: [1,2,3,6,9,8,7,4,5]\\nExplanation: The elements in spiral order are returned.\",\n      \"example_2\": \"Input: matrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]]\\nOutput: [1,2,3,4,8,12,11,10,9,5,6,7]\\nExplanation: The elements in spiral order are returned.\"\n    }\n  ]\n}\n```\n" },
            ],
        },
    ],
});
